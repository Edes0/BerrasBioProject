@model IEnumerable<BerrasBio.Models.Shows>

@{
    ViewData["Title"] = "Shows";
}
<div class="text-center Orange">
    <h1>Shows</h1>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>

<table id="myTable1" class="Orange table">
    <thead>
        <tr>
            <th>
                <h3>Forest</h3>
            </th>
            <th onclick="sortTable(0)">
                @Html.DisplayNameFor(model => model.ShowTime)
            </th >
            <th @*onclick="sortTable(1)*@">
                @Html.DisplayNameFor(model => model.Movie.Title)
            </th>
            <th @*onclick="sortTable(1)*@">
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th onclick="sortTable(1)">
                @Html.DisplayNameFor(model => model.SeatsTaken)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {

            @if (item.Salon.Name == "Forest")
            {
                <tr>
                    <td>
                        <a asp-controller="Movies" asp-action="Index" asp-route-id="@item.MovieId">
                            <img class="w-25" src="@Html.DisplayFor(modelItem => item.Movie.CoverUrl)">
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShowTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Movie.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SeatsTaken)
                        /
                        @Html.DisplayFor(modelItem => item.Salon.Seats)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Edit</button></a> |
                        <a asp-action="Details" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Details</button></a> |
                        <a asp-action="Delete" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Delete</button></a> |
                        @{
                            if (item.SeatsTaken == 100)
                            {
                                <button type="button" class="btn btn-secondary btn-lg" disabled>Button</button>
                            }
                            else
                            {
                                <a asp-controller="Bookings" asp-action="Create" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Book</button></a>
                            }
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<table class="Orange table">
    <thead>
        <tr>
            <th>
                <h3>Ocean</h3>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShowTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Salon.Seats)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)

            @if (item.Salon.Name == "Ocean")
            {
                <tr>
                    <td>
                        <a asp-controller="Movies" asp-action="Index" asp-route-id="@item.MovieId">
                            <img class="w-25" src="@Html.DisplayFor(modelItem => item.Movie.CoverUrl)">
                        </a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ShowTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Movie.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SeatsTaken)
                        /
                        @Html.DisplayFor(modelItem => item.Salon.Seats)
                    </td>
                    <td>

                        <a asp-action="Edit" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Edit</button></a> |
                        <a asp-action="Details" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Details</button></a> |
                        <a asp-action="Delete" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Delete</button></a> |
                        @{
                            if (item.SeatsTaken == 100)
                            {
                                <button type="button" class="btn btn-secondary btn-lg" disabled>Button</button>
                            }
                            else
                            {
                                <a asp-controller="Bookings" asp-action="Create" asp-route-id="@item.Id"><button type="button" class="btn btn-danger">Book</button></a>
                            }   
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable1");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
